/*
Given a non-negative number represented as an array of digits,

add 1 to the number ( increment the number represented by the digits ).

The digits are stored such that the most significant digit is at the head of the list.

Example:

If the vector has [1, 2, 3]

the returned vector should be [1, 2, 4]

as 123 + 1 = 124.

*/

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

vector<int> Solution::plusOne(vector<int> &A) {
    vector<int> v,f;
    int flag=0,i;
    for(i=0;i<A.size();i++)
    {
        if(A[i]==0&&flag==0)
        {}
        else if(flag!=0&&A[i]==0)
        {
            if(i==A.size()-1)
            {
                v.push_back(A[i]+1);
            }
            else
            v.push_back(A[i]);
        }
        else
        {
            if(i==A.size()-1)
            {
                A[i]=A[i]+1;
            }
            v.push_back(A[i]);
            flag=1;
        }
    }
    reverse(v.begin(),v.end());
    int carry=0;
    for(i=0;i<v.size();i++)
    {
        v[i]=v[i]+carry;
        if(v[i]>9)
        {
            carry=v[i]/10;
            f.push_back(v[i]%10);
        }
        else
        {
            carry=0;
            f.push_back(v[i]);
        }
    }
    if(carry!=0)
    {
        f.push_back(carry);
    }
    reverse(f.begin(),f.end());
    if(flag==0)
        f.push_back(1);
    return f;
}
